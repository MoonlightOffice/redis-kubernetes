apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - port: 7000
    targetPort: 7000

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
      - name: copy-redis-config
        image: busybox
        command: ['sh', '-c', 'cp /data/redis.conf /redis-vol']
        volumeMounts:
        - name: redis-vol
          mountPath: /redis-vol
        - name: redis-config
          mountPath: /data
      containers:
      - name: redis
        image: valkey/valkey
        volumeMounts:
        - name: redis-vol
          mountPath: /redis-vol
        workingDir: /redis-vol
        command: ["valkey-server", "./redis.conf"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  volumeClaimTemplates:
  - metadata:
      name: redis-vol
    spec:
      accessModes:
      - ReadWriteOncePod
      resources:
        requests:
          storage: 10Mi
      storageClassName: redis-sc

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis.conf: |
    port 7777
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    appendonly yes 
